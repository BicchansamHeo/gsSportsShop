<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
   xmlns:security="http://www.springframework.org/schema/security"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
                        http://www.springframework.org/schema/beans/spring-beans.xsd
                        http://www.springframework.org/schema/context
                     http://www.springframework.org/schema/context/spring-context.xsd
                  http://www.springframework.org/schema/mvc
                  http://www.springframework.org/schema/mvc/spring-mvc.xsd
                    http://www.springframework.org/schema/security 
                    http://www.springframework.org/schema/security/spring-security.xsd
                     http://www.springframework.org/schema/tx 
                     http://www.springframework.org/schema/tx/spring-tx.xsd">
	
	<!-- 자바에서 사용하기 위한 설정 구문 -->
	<security:global-method-security pre-post-annotations="enabled" secured-annotations="enabled"/>
	<!-- 스프링 security에 인증 url을 받지 않는부분을 제외 처리 -->
	<!-- <security:http pattern="/index.jsp" security="none"/> -->
	<!-- <security:http pattern="/main.do" security="none"/> -->
	
	<!-- auto-config true는 스프링에서 제공하는 로그인 창을 자동으로 제공. -->
	<!-- permitAll은 모두다 인증을 해야 한다. -->
	<!-- 그외에는 hasRole('ROLE_USER')" ROLE_USER라는 인증을 가져야 사용 가능하다는 뜻 -->
	<!-- use-expressions -->
	<security:http auto-config='true'  use-expressions="true">
		<security:intercept-url pattern="/login" access="permitAll" /> 
		<security:intercept-url pattern="/spring_security_login" access="permitAll" /> 
		<security:intercept-url pattern="/main.do" access="permitAll" /> 
		<security:intercept-url pattern="/pay.do" access="hasAnyRole('ROLE_TM','ROLE_AM','ROLE_EM','ROLE_DM')" />
		<security:intercept-url pattern="/stat.do" access="hasAnyRole('ROLE_TM','ROLE_AM','ROLE_EM','ROLE_SM')" />
		<security:intercept-url pattern="/mypage.do" access="hasAnyRole('ROLE_TM','ROLE_AM','ROLE_EM','ROLE_SM','ROLE_USER')" />
		<security:intercept-url pattern="/mypageTeam.do" access="hasAnyRole('ROLE_TM','ROLE_AM','ROLE_EM','ROLE_SM','ROLE_USER')" />
		<security:intercept-url pattern="/authManage.do" access="hasAnyRole('ROLE_SM')"/>
		<security:intercept-url pattern="/detailRoom.do" access="hasAnyRole('ROLE_TM','ROLE_AM','ROLE_EM','ROLE_USER', 'ROLE_SM')" />
		<security:intercept-url pattern="/searchMain.do" access="hasAnyRole('ROLE_TM','ROLE_AM','ROLE_EM','ROLE_USER', 'ROLE_SM')" />
		<security:intercept-url pattern="/mypage.do" access="permitAll" />
		<!-- <security:intercept-url pattern="/resources/**" access="permitAll" />  
		
        <security:intercept-url pattern="/stat*" access="hasRole('ROLE_ADMIN')" /> -->
       <!--  <security:intercept-url pattern="/stat*" access="ROLE_ADMIN" /> -->
        
        <!-- login-page라는 옵션이 빠진다면 /spring_security_login 이곳으로 이동함 -->
        <!-- default-target-url 리턴할 url인데 /만 써주면 이전에 요청했던 url로 이동하는것이다. -->
        <!-- username-parameter input box id 값 -->
        <!-- authentication-failure-url인증 실패 시 보낼 페이지 -->
		<security:form-login login-page="/login.do"   
			default-target-url="/main.do"
			username-parameter="username" 
			password-parameter="password"
			authentication-failure-url="/login.do?error"
			always-use-default-target='true'
		/> 
		
	 	<security:logout invalidate-session="true"  delete-cookies="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE" logout-success-url="/main.do" />
		<!-- enable csrf protection -->
	</security:http> 

	<!-- dao를 통해 인증을 하지 않아도 여기에서 선언한 아이디 패스워드로 인증이 가능하다. -->
   <security:authentication-manager> 
		<security:authentication-provider user-service-ref="loginService"/>
	    <security:authentication-provider> 
		    <security:user-service> 
		   		<security:user name="admin" password="1234" authorities="ROLE_ADMIN" /> 
		   		<security:user name="guest" password="1234" authorities="ROLE_USER" /> 
		    </security:user-service> 
	    </security:authentication-provider> 
    </security:authentication-manager>
     
	<bean id="loginService" class="com.gsitm.login.service.LoginService"/>
</beans> 